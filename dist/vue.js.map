{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/parser.js","../src/compiler/generator.js","../src/compiler/index.js","../src/observer/watcher.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/vdom/create-element.js","../src/render.js","../src/index.js"],"sourcesContent":["// 此处放所有的工具方法\r\n\r\n\r\nexport function isObject(obj) {\r\n    return typeof obj === 'object' && obj !== null\r\n}","let oldArrayMethods = Array.prototype; // 获取数组原型上的方法\r\n\r\n// 创建一个全新的对象 可以找到数组原型上的方法，而且修改对象时不会影响原数组的原型方法\r\nexport let arrayMethods = Object.create(oldArrayMethods);\r\n\r\nlet methods = [ // 这七个方法都可以改变原数组\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'sort',\r\n    'reverse',\r\n    'splice' \r\n]\r\nmethods.forEach(method=>{\r\n    arrayMethods[method] = function (...args) { // 函数劫持 AOP\r\n        // 当用户调用数组方法时 会先执行我自己改造的逻辑 在执行数组默认的逻辑\r\n        const ob = this.__ob__;\r\n        let result  = oldArrayMethods[method].apply(this,args);\r\n        let inserted;\r\n        // push unshift splice 都可以新增属性  （新增的属性可能是一个对象类型）\r\n        // 内部还对数组中引用类型也做了一次劫持  [].push({name:'zf'})\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break;\r\n            case 'splice': // 也是新增属性  可以修改 可以删除  [].splice(arr,1,'div')\r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        inserted && ob.observeArray(inserted);\r\n        return result;\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n","import {isObject} from '../utils.js';\r\nimport {arrayMethods} from './array'\r\n\r\n// es6的类来实现的\r\nclass Observer{\r\n    constructor(data){\r\n        // 对数组索引进行拦截 性能差而且直接更改索引的方式并不多\r\n        Object.defineProperty(data,'__ob__',{ // __ob__ 是一个响应式饿表示 对象数组都有\r\n            enumerable:false, // 不可枚举\r\n            configurable:false,\r\n            value:this\r\n        })\r\n        // data.__ob__ = this; // 相当于在数据上可以获取到__ob__这个属性 指代的是Observer的实例\r\n        if(Array.isArray(data)){\r\n            // vue如何对数组进行处理呢？ 数组用的是重写数组的方法  函数劫持\r\n            // 改变数组本身的方法我就可以监控到了\r\n            data.__proto__ = arrayMethods; // 通过原型链 向上查找的方式\r\n            // [{a:1}]    => arr[0].a = 100\r\n            this.observeArray(data);\r\n        }else{\r\n            this.walk(data); // 可以对数据一步一步的处理\r\n        }\r\n    }\r\n    observeArray(data){\r\n        for(let i =0 ; i< data.length;i++){\r\n            observe(data[i]);// 检测数组的对象类型\r\n        }\r\n    }\r\n    walk(data){\r\n        // 对象的循环   data:{msg:'zf',age:11}\r\n        Object.keys(data).forEach(key=>{\r\n            defineReactive(data,key,data[key]);// 定义响应式的数据变化\r\n        })\r\n    }\r\n}\r\n// vue2 的性能 递归重写get和set  proxy\r\nfunction defineReactive(data,key,value){\r\n    observe(value); // 如果传入的值还是一个对象的话 就做递归循环检测\r\n    Object.defineProperty(data,key,{\r\n        get(){\r\n            return value\r\n        },\r\n        set(newValue){\r\n            if(newValue == value) return;\r\n            observe(newValue); // 监控当前设置的值，有可能用户给了一个新值\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data){\r\n    // 对象就是使用defineProperty 来实现响应式原理\r\n\r\n    // 如果这个数据不是对象 或者是null 那就不用监控了\r\n    if(!isObject(data)){\r\n        return;\r\n    }\r\n    if(data.__ob__ instanceof Observer){ // 防止对象被重复观测\r\n        return ;\r\n    }\r\n    \r\n    // 对数据进行defineProperty\r\n    return new Observer(data); // 可以看到当前数据是否被观测过\r\n}","import { observe } from './observer/index.js'\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    if (opts.props) {\r\n        initProps(vm);\r\n    }\r\n    if (opts.methods) {\r\n        initMethod(vm);\r\n    }\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    // computed ... watch\r\n}\r\nfunction initProps() {}\r\nfunction initMethod() {}\r\nfunction proxy(target,property,key){\r\n    Object.defineProperty(target,key,{\r\n        get(){\r\n            return target[property][key];\r\n        },\r\n        set(newValue){\r\n            target[property][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    // 数据响应式原理\r\n    let data = vm.$options.data; // 用户传入的数据\r\n    // vm._data 就是检测后的数据了\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\r\n    // 观测数据\r\n    // 将数据全部代理到vm的实例上\r\n\r\n    for(let key in data){\r\n        proxy(vm,'_data',key);\r\n    }\r\n    observe(data); // 观测这个数据\r\n}","//              字母a-zA-Z_ - . 数组小写字母 大写字母  \r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\r\n// ?:匹配不捕获   <aaa:aaa>\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// startTagOpen 可以匹配到开始标签 正则捕获到的内容是 (标签名)\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\n// 闭合标签 </xxxxxxx>  \r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\n// <div aa   =   \"123\"  bb=123  cc='123'\r\n// 捕获到的是 属性名 和 属性值 arguments[1] || arguments[2] || arguments[2]\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n// <div >   <br/>\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >\r\n// 匹配动态变量的  +? 尽可能少匹配\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\r\nexport function parseHTML(html) {\r\n    // ast 树 表示html的语法\r\n    let root; // 树根 \r\n    let currentParent;\r\n    let stack = []; // 用来判断标签是否正常闭合  [div]  解析器可以借助栈型结构\r\n    // <div id=\"app\" style=\"color:red\"><span>    helloworld {{msg}}   </span></div>\r\n\r\n    // vue2.0 只能有一个根节点 必须是html 元素\r\n\r\n    // 常见数据结构 栈 队列 数组 链表 集合 hash表 树\r\n    function createASTElement(tagName,attrs){\r\n        return {\r\n            tag:tagName,\r\n            attrs,\r\n            children:[],\r\n            parent:null,\r\n            type:1 // 1 普通元素  3 文本\r\n        }\r\n    }\r\n    // console.log(html)\r\n    function start(tagName, attrs) { // 开始标签 每次解析开始标签 都会执行此方法\r\n        let element  = createASTElement(tagName,attrs);\r\n        if(!root){\r\n            root = element; // 只有第一次是根\r\n        }\r\n        currentParent = element;\r\n        stack.push(element);\r\n    }\r\n    function end(tagName) {  // 结束标签  确立父子关系\r\n        let element = stack.pop();\r\n        let parent = stack[stack.length-1];\r\n        if(parent){\r\n            element.parent = parent;\r\n            parent.children.push(element);\r\n        }\r\n    }\r\n    function chars(text) { // 文本\r\n       text = text.replace(/\\s/g,'');\r\n       if(text){\r\n        currentParent.children.push({\r\n            type:3,\r\n            text\r\n        })\r\n       }\r\n    }\r\n    // 根据 html 解析成树结构  </span></div>\r\n    while (html) {\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd == 0) {\r\n            const startTageMatch = parseStartTag();\r\n\r\n            if (startTageMatch) {\r\n                // 开始标签\r\n                start(startTageMatch.tagName,startTageMatch.attrs)\r\n            }\r\n            const endTagMatch = html.match(endTag);\r\n\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1])\r\n            }\r\n            // 结束标签 \r\n        }\r\n\r\n        // 如果不是0 说明是文本\r\n        let text;\r\n        if (textEnd > 0) {\r\n            text = html.substring(0, textEnd); // 是文本就把文本内容进行截取\r\n            chars(text);\r\n        }\r\n        if (text) {\r\n            advance(text.length); // 删除文本内容\r\n        }\r\n    }\r\n\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen); // 匹配开始标签\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 匹配到的标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            let end, attr;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length);\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n            };\r\n            if (end) {\r\n                advance(end[0].length);\r\n                return match;\r\n            }\r\n        }\r\n    }\r\n\r\n    return root;\r\n\r\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nfunction genProps(attrs){  // {id:'app',style:{color:red}}\n    let str = ''\n    for(let i = 0; i<attrs.length; i++){\n        let attr = attrs[i]; // 取到每一个属性\n        if(attr.name === 'style'){\n            let obj = {}; //  color:red;background:green\n            attr.value.split(';').forEach(item=>{\n                let [key,value] = item.split(':');\n                obj[key] = value;\n            });\n            attr.value = obj; // 将原来的字符串换成了 刚才格式化后的对象\n        }\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`;\n}\nfunction gen(node){\n    if(node.type === 1){\n        return generate(node)\n    }else{\n        // 文本的处理\n        let text = node.text;\n        if(!defaultTagRE.test(text)){  // 有变量 {{}}\n            return `_v(${JSON.stringify(text)})` // _v('helloworld')\n        }else{\n            let tokens = []; // 每次正则使用过后 都需要重新指定 lastIndex  aaaab\n            let lastIndex =  defaultTagRE.lastIndex = 0;\n            let match,index;\n            while(match = defaultTagRE.exec(text)){\n                index = match.index;\n                // 通过 lastIndex,ndex\n                tokens.push(JSON.stringify(text.slice(lastIndex,index)));\n                tokens.push(`_s(${match[1].trim()})`);\n                lastIndex = index + match[0].length\n            }\n            if(lastIndex < text.length){\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\n            }\n            return `_v(${tokens.join('+')})`\n        }\n        // helloworld {{  msg  }}  aa {{bb}}  aaa   => _v('helloworld'+_s(msg)+\"aa\" + _s(bb))\n    }\n}  \nfunction genChildren(el){ // <div><span></span> hello</div>\n    const children = el.children;\n    if(children){\n        return children.map(c=>gen(c)).join(',')\n    }else{\n        return false\n    }\n}\nexport function generate(el){\n    let children = genChildren(el); // 生成孩子字符串\n    let code = `_c(\"${el.tag}\",${\n            el.attrs.length? `${genProps(el.attrs)}`  : undefined\n        }${\n            children? `,${children}` :''\n        })`;\n\n    return code;\n}\n// 语法级的编译 ","import {parseHTML} from './parser.js'\r\nimport {generate} from './generator.js';\r\nexport function compileToFunctions(template){\r\n    // console.log(template)\r\n    // 实现模板的编译\r\n\r\n    let ast = parseHTML(template);\r\n\r\n    // 代码生成\r\n    // template => render 函数\r\n\r\n    /**\r\n     * react \r\n     * render(){ \r\n        * with(this){\r\n        *  return _c('div',{id:app,style:{color:red}},_c('span',undefined,_v(\"helloworld\"+_s(msg)) ))\r\n        * }\r\n     * }\r\n     * \r\n     */\r\n    // 核心就是字符串拼接\r\n    let code = generate(ast); // 代码生成 =》 拼接字符串\r\n    \r\n    code = `with(this){ \\r\\nreturn ${code} \\r\\n}`;\r\n\r\n    let render = new Function(code); // 相当于给字符串变成了函数\r\n\r\n\r\n    // 注释节点 自闭和标签 事件绑定 @click  class slot插槽\r\n\r\n    return render;\r\n    // 模板编译原理 \r\n    // 1.先把我们的代码转化成ast语法树 （1）  parser 解析  (正则)\r\n    // 2.标记静态树  （2） 树得遍历标记 markup  只是优化\r\n    // 3.通过ast产生的语法树 生成 代码 =》 render函数  codegen\r\n}","class Watcher{\n    constructor(vm,exprOrFn,cb,options){\n        exprOrFn();\n    }\n}\n\n\nexport default Watcher","export function patch(oldVnode,newVnode){\n    const isRealElement = oldVnode.nodeType;\n    if(isRealElement){\n        // 真实元素\n        const oldElm = oldVnode;\n        const parentElm = oldElm.parentNode;\n        let el = createElm(newVnode);\n        parentElm.insertBefore(el,oldElm.nextSibling)\n        parentElm.removeChild(oldElm);\n        return el; // 渲染的真实dom\n    }else{\n        // dom diff 算法\n    }\n}   \nfunction createElm(vnode){ // 需要递归创建\n    let {tag,children,data,key,text} = vnode;\n    if(typeof tag == 'string'){\n        // 元素 // 将虚拟节点和真实节点做一个映射关系 （后面diff时如果元素相同直接复用老元素 ）\n        vnode.el = document.createElement(tag);\n        updateProperties(vnode); // 跟新元素属性\n        children.forEach(child => {\n            // 递归渲染子节点 将子节点 渲染到父节点中\n            vnode.el.appendChild(createElm(child)); \n        });\n    }else{\n        // 普通的文本\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el\n}\nfunction updateProperties(vnode){\n    let el = vnode.el;\n    let newProps = vnode.data || {};\n\n    for(let key in newProps){\n        if(key == 'style'){\n            for(let styleName in newProps.style) { // {color:red,background:green}\n                el.style[styleName] = newProps.style[styleName]\n            }\n        }\n        // event \n        else{\n            el.setAttribute(key,newProps[key]);\n        }\n    }\n}","import Watcher from './observer/watcher';\nimport {patch} from './vdom/patch';\nexport function lifeCycleMixin(Vue){\n    Vue.prototype._update = function (vnode) {\n        const vm = this;\n\n        // 将虚拟节点 变成 真实节点 替换掉$el\n\n        // 后续 dom diff 也会执行此方法\n\n\n        vm.$el = patch(vm.$el,vnode);\n\n    }\n}\n\nexport function mountComponent(vm, el) {\n    // Vue在渲染的过程中 会创建一个 所谓的“渲染watcher ” 只用来渲染的\n    // watcher就是一个回调 每次数据变化 就会重新执行watcher\n\n\n    // Vue是不是MVVM框架\n\n    const updateComponent = () =>{\n        // 内部会调用刚才我们解析后的render方法 =》 vnode\n        // _render => options.render 方法\n        // _update => 将虚拟dom 变成真实dom 来执行\n        vm._update(vm._render()); \n    }\n\n    // 每次数据变化 就执行 updateComponent 方法 进行更新操作\n    new Watcher(vm, updateComponent, () => {}, true);\n\n\n    // vue 响应式数据的规则 数据变了 视图会刷新\n}","import { initState } from './state';\r\nimport {compileToFunctions} from './compiler/index.js';\r\nimport {mountComponent} from './lifecycle.js'\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        // Vue的内部 $options 就是用户传递的所有参数\r\n        const vm = this;\r\n        vm.$options = options; // 用户传入的参数\r\n        initState(vm); // 初始化状态\r\n        // 需要通过模板进行渲染\r\n        if (vm.$options.el) { // 用户传入了el属性\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) { // 可能是字符串 也可以传入一个dom对象\r\n        const vm = this;\r\n        el = vm.$el = document.querySelector(el); // 获取el属性\r\n\r\n        // 如果同时传入 template 和render  默认会采用render 抛弃template，如果都没传就使用id=\"app\"中的模板\r\n        const opts = vm.$options;\r\n\r\n        if(!opts.render){\r\n            let template = opts.template;\r\n            debugger\r\n            if(!template && el){ // 应该使用外部的模板\r\n                template = el.outerHTML;\r\n                console.log(template)\r\n            }\r\n            \r\n            const render = compileToFunctions(template);\r\n            opts.render = render;\r\n        }\r\n\r\n        // 走到这里说明不需要编译了 ，因为用户传入的就是 一个render函数\r\n\r\n        mountComponent(vm,el); // 组件的挂载流程\r\n    }\r\n\r\n}\r\n\r\n","export function createTextVNode(text) {\n    return vnode(undefined, undefined, undefined, undefined, text);\n}\nexport function createElement(tag, data = {}, ...children) {\n    // vue中的key 不会作为属性传递给组件\n    return vnode(tag, data, data.key, children)\n}\n// 虚拟节点是 产生一个对象 用来描述dom结构 增加自定义属性\n// ast 他是描述 dom语法的 \nfunction vnode(tag, data, key, children, text) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text,\n    }\n}","import {createTextVNode,createElement} from './vdom/create-element'\nexport function renderMixin(Vue) {\n    Vue.prototype._render = function() {\n        // 调用我们自己实现的render方法\n\n        const vm = this;\n        const { render } = vm.$options;\n\n        Vue.prototype._v = function(text) {\n            // 创建文本的虚拟及诶点\n            return createTextVNode(text)\n\n        }\n        Vue.prototype._c = function() {\n            return createElement(...arguments);\n        }\n        Vue.prototype._s = function(val) {\n            // 判断当前这个值是不是对象 ，如果是对象 直接转换成字符串 ，防止页面出现[object Object]\n            return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\n        }\n        let vnode = render.call(vm); // _c _c  _s\n        return vnode\n    }\n}","import {initMixin} from './init';\r\nimport {renderMixin} from './render.js'\r\nimport {lifeCycleMixin} from './lifecycle'\r\nfunction Vue(options){\r\n    // 内部要进行初始化的操作 \r\n    this._init(options); // 初始化操作\r\n}\r\n\r\ninitMixin(Vue); // 添加原型的方法\r\nrenderMixin(Vue);\r\nlifeCycleMixin(Vue);\r\n\r\n\r\n\r\nexport default Vue;"],"names":["isObject","obj","oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","ob","__ob__","args","result","apply","inserted","slice","observeArray","Observer","data","defineProperty","enumerable","configurable","value","isArray","__proto__","walk","i","length","observe","keys","key","defineReactive","get","set","newValue","initState","vm","opts","$options","props","initData","proxy","target","property","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","stack","createASTElement","tagName","attrs","tag","children","parent","type","start","element","push","end","pop","chars","text","replace","textEnd","indexOf","startTageMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","split","item","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","trim","join","genChildren","el","map","c","code","undefined","compileToFunctions","template","ast","render","Function","Watcher","exprOrFn","cb","options","patch","oldVnode","newVnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","vnode","document","createElement","updateProperties","child","appendChild","createTextNode","newProps","styleName","style","setAttribute","lifeCycleMixin","Vue","_update","$el","mountComponent","updateComponent","_render","initMixin","_init","$mount","querySelector","outerHTML","console","log","createTextVNode","renderMixin","_v","_c","arguments","_s","val"],"mappings":"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"}